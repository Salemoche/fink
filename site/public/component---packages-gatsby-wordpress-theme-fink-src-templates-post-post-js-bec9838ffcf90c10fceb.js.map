{"version":3,"sources":["webpack://site/../node_modules/classnames/index.js","webpack://site/../packages/gatsby-wordpress-theme-fink/src/components/3_elements/navigation/navigation.component.jsx","webpack://site/../packages/gatsby-wordpress-theme-fink/src/components/3_elements/footer/footer.component.jsx","webpack://site/../packages/gatsby-wordpress-theme-fink/src/components/2_molecules/loading/loading.component.jsx","webpack://site/../packages/gatsby-wordpress-theme-fink/src/components/1_atoms/layout/layout.component.jsx","webpack://site/../packages/gatsby-wordpress-theme-fink/src/components/2_molecules/text-block/text-block.component.jsx","webpack://site/../packages/gatsby-wordpress-theme-fink/src/components/2_molecules/image-block/image-block.component.jsx","webpack://site/../packages/gatsby-wordpress-theme-fink/src/components/3_elements/content-section/content-section.component.jsx","webpack://site/../packages/gatsby-wordpress-theme-fink/src/components/2_molecules/project-header/project-header.component.jsx","webpack://site/../packages/gatsby-wordpress-theme-fink/src/templates/post/post.js","webpack://site/../packages/gatsby-wordpress-theme-fink/src/utils/helpers.js","webpack://site/../packages/gatsby-wordpress-theme-fink/src/images/Image-Placeholder.png"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","menu","headerVisibility","headerMode","pathname","window","location","split","className","menuItems","nodes","map","menuItem","label","toLowerCase","order","Link","to","url","siteOptions","dangerouslySetInnerHTML","__html","contact","Date","getFullYear","href","target","rel","visibleClass","contentLoaded","children","useState","setHeaderMode","setHeaderVisibility","setContentLoaded","prevScrollY","useRef","useEffect","layout","document","querySelector","handleScroll","currentScrollY","scrollTop","handleLandingMode","current","innerHeight","scrollDist","addEventListener","passive","removeEventListener","StaticQuery","query","render","data","allWp","edges","node","seitenOptionen","acfOptions","menuArray","allWpMenu","forEach","slug","hauptmenu","TextBlock","text","index","defaultProps","ImageBlock","props","contentImage","getGatsbyImage","images","image","imageMode","width","height","captionClass","hasCaption","G","alt","altText","src","PlaceholderImage","srcSet","caption","ContentSection","content","isFullImage","fieldGroupName","sectionContent","getSectionContent","array","element","setTimeout","console","log","contentType","imageCaption","getCaption","defaultCaption","full","left","right","getContent","contentObject","ProjectHeader","projectDetailImage","title","pageContext","acfProject","sections","acfContent","homeImageTexture","homeImageNoTexture","projectOverviewImage","sectionItem","gatsbyImage","localFile","childImageSharp","gatsbyImageData"],"mappings":"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","file":"component---packages-gatsby-wordpress-theme-fink-src-templates-post-post-js-bec9838ffcf90c10fceb.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","// React\nimport React from 'react';\n\n// Styles\nimport './navigation.styles.scss'\n\n// Gatsby\nimport { StaticQuery, Link, graphql } from 'gatsby';\nimport { classNames } from 'classnames';\n\n\nconst Navigation = ({menu, headerVisibility, headerMode}) => {\n\n    const pathname = window.location.pathname.split('/')[1];\n\n    return (\n        <header>\n            <nav className={`header-navigation header-navigation-${headerVisibility} header-navigation-${headerMode}`}>\n                <ul className=\"header-navigation-list\">\n                    { menu.menuItems.nodes.map(menuItem => (\n                        <li className={`header-navigation-list-item header-navigation-${menuItem.label.toLowerCase()} ${pathname == menuItem.label.toLowerCase() ? 'current' : '' }`} key={menuItem.order}>\n                            <Link to={menuItem.url}>{menuItem.label}</Link>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default Navigation;","// React\nimport React from 'react';\n\n// Styles\nimport './footer.styles.scss'\n\n// Gatsby\nimport { Link } from 'gatsby';\nimport { StaticQuery, graphql } from \"gatsby\";\n\nconst Footer = ( { menu, siteOptions } ) => {\n    // console.log(menu)\n    return (\n        <footer className=\"footer fink-grid-container\">\n            <div className=\"footer-contact-info\" dangerouslySetInnerHTML={{__html: siteOptions.contact}}>\n            </div>\n            <nav className=\"footer-navigation\">\n                <ul className=\"footer-navigation-list\">\n                    { menu.menuItems.nodes.map(menuItem => (\n                        <li className=\"footer-navigation-list-item\" key={menuItem.order}>\n                            <Link to={menuItem.url}>{menuItem.label}</Link>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n            <div className=\"footer-copyright\">\n                Copyright ©{new Date().getFullYear()} | Website by <a href=\"http://inter-action.design\" target=\"_blank\" rel=\"noopener noreferrer\">Salemoche</a>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","// React\nimport React from 'react';\n\n// Gatsby\n// import { GatsbyImage } from 'gatsby-plugin-image';\n\n// Styles\nimport './loading.styles.scss';\n\n// Misc\nimport PropTypes from 'prop-types';\n// import PlaceholderImage from '../../../images/Image-Placeholder.png'\n\nconst Loading = ( { contentLoaded } ) => {\n\n    const visibleClass = contentLoaded ? 'invisible' : 'visible';\n\n    return (\n        <div className={`loading ${visibleClass}`}></div>\n    )\n}\n\nexport default Loading;","// React\nimport React, { useState, useEffect, useRef }  from 'react';\n\n// Styles\nimport './layout.styles.scss'\nimport Navigation from '../../3_elements/navigation/navigation.component';\nimport Footer from '../../3_elements/footer/footer.component';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { node } from 'prop-types';\nimport Loading from '../../2_molecules/loading/loading.component';\n\n\nconst Layout = ( {children} ) => {\n\n    const [headerMode, setHeaderMode] = useState('regular');\n    const [headerVisibility, setHeaderVisibility] = useState('visible');\n    const [contentLoaded, setContentLoaded] = useState(false);\n    const prevScrollY = useRef(0);\n    const pathname = window.location.pathname.split('/')[1] || 'home';\n\n    useEffect(() => {\n\n        const layout = document.querySelector('.layout');\n\n        const handleScroll = () => {\n            const currentScrollY = layout.scrollTop;\n\n            handleLandingMode(currentScrollY);\n\n            if (prevScrollY.current < currentScrollY && headerVisibility == 'visible') {\n                if (pathname == 'home' && currentScrollY > window.innerHeight) {\n                    setHeaderVisibility('invisible');\n                } else if (pathname != 'home') {\n                    setHeaderVisibility('invisible');\n                }\n            }\n            if (prevScrollY.current > currentScrollY &&  headerVisibility == 'invisible') {\n                setHeaderVisibility('visible');\n            }\n    \n            prevScrollY.current = currentScrollY;\n            // console.log(headerMode, headerVisibility, currentScrollY);\n        };\n\n        const handleLandingMode = (scrollDist = prevScrollY) => {\n            if (scrollDist < 42 || !scrollDist) {\n            // if (pathname == 'home' && (scrollDist < 20 || !scrollDist)) {\n                setHeaderMode('landing');\n            } else {\n                setHeaderMode('regular');\n            }\n            // console.log(pathname == 'home', scrollDist, scrollDist < 20)\n        }\n\n        handleLandingMode(prevScrollY.current);\n\n        layout.addEventListener(\"scroll\", handleScroll, { passive: true });\n    \n        return () => layout.removeEventListener(\"scroll\", handleScroll);\n    }, [headerMode, headerVisibility]);\n\n    useEffect(() => {\n        setContentLoaded(true);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            setContentLoaded(false);\n        }\n    }, []);\n\n    return (\n        <StaticQuery\n            query={graphql`\n                query HeadingQuery {\n                    allWpMenu {\n                        edges {\n                            node {\n                                id\n                                menuItems {\n                                    nodes {\n                                        id\n                                        url\n                                        order\n                                        label\n                                    }\n                                }\n                                slug\n                            }\n                        }\n                    }\n                    allWp(limit: 1) {\n                        edges {\n                        node {\n                            seitenOptionen {\n                            acfOptions {\n                                contact\n                            }\n                            }\n                        }\n                        }\n                    }\n                }\n            `}\n            render={data => {\n                \n                const siteOptions = data.allWp.edges[0].node.seitenOptionen.acfOptions;\n                let menuArray = {}\n                data.allWpMenu.edges.forEach( ({node}) => {\n                    menuArray[node.slug] = node;\n                })\n\n                return (\n                    <div className={`layout layout-${pathname}`}>\n                        {menuArray?.hauptmenu ? <Navigation menu={menuArray?.['hauptmenu']} headerMode={headerMode} headerVisibility={headerVisibility}/> : ''}\n                            {children}\n                        {menuArray?.['footer-menu'] ? <Footer menu={menuArray?.['footer-menu']} siteOptions={siteOptions}/> : ''}\n                        <Loading contentLoaded={contentLoaded}/>\n                    </div>\n                )\n            }}\n        />\n    )\n}\n\nexport default Layout;","// React\nimport React from 'react';\n\n// Gatsby\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\n// Components\n\n// Styles\nimport './text-block.styles.scss'\n\n// Misc\nimport PropTypes from 'prop-types';\n\nimport { getGatsbyImage } from '../../../utils/helpers';\nimport PlaceholderImage from '../../../images/Image-Placeholder.png'\nimport classNames from 'classnames';\n\nconst TextBlock = ( {text, index} ) => {\n\n    return (\n        <div className={`text-block content-item-${index} block`} dangerouslySetInnerHTML={{ __html: text }}></div>\n    )\n}\n\nexport default TextBlock;\n\nTextBlock.propTypes = {\n  // layout: PropTypes.oneOf(['ImageRight', 'ImageLeft', 'Full']),\n};\n\nTextBlock.defaultProps = {\n  // layout: 'ImageRight',\n};","// React\nimport React from 'react';\n\n// Components\n\n// Styles\nimport './image-block.styles.scss'\n\n// Misc\nimport PropTypes from 'prop-types';\nimport { getGatsbyImage } from '../../../utils/helpers';\nimport classNames from 'classnames';\nimport PlaceholderImage from '../../../images/Image-Placeholder.png'\n\n// Gatsby\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nconst ImageBlock = ( props ) => {\n\n    const contentImage = getGatsbyImage(props.images[0].image)\n    if (!contentImage) return ''\n    const {index} = props;\n    const {width, height} = contentImage;\n    const imageMode = width > height ? 'landscape' : 'portrait';\n    const captionClass = props.images[0]?.hasCaption ? ' with-caption' : '' \n\n    return (\n        <div className={`image-block content-item-${index} block${captionClass} ${imageMode}`}>\n          { contentImage?.image ? \n            <GatsbyImage image={contentImage.image} alt={props.images[0].altText || 'project image'}></GatsbyImage>\n          :\n            <img src={PlaceholderImage} alt=\"Placeholder\" srcSet=\"\"/>\n          }\n          { props.images[0]?.hasCaption ?\n            <div className=\"image-block__caption\" dangerouslySetInnerHTML={{__html: props.images[0].caption}}></div>\n          :\n            \"\"\n          }\n        </div>\n    )\n}\n\nexport default ImageBlock;\n\nImageBlock.propTypes = {\n  // layout: PropTypes.oneOf(['ImageRight', 'ImageLeft', 'Full']),\n};\n\nImageBlock.defaultProps = {\n  // layout: 'ImageRight',\n};","//React\nimport React from 'react';\n\n\n// Misc\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport TextBlock from '../../2_molecules/text-block/text-block.component';\nimport ImageBlock from '../../2_molecules/image-block/image-block.component';\n\n//Styles \nimport './content-section.styles.scss';\n\nconst ContentSection = ( props ) => {\n\n    const content = props.content;\n    if (!content) return ''\n\n    const isFullImage = content.length == 1 && content[0].fieldGroupName == 'post_Acfcontent_sections_Content_ImageLayout';\n    const sectionContent = {}\n\n    // fill layout object with the content (up to 2)\n    const getSectionContent = (array, index) => {\n\n      const element = array[index];\n\n      setTimeout(() => {\n          console.log(element)\n      }, 400);\n\n      return {\n        index,\n        contentType: element.fieldGroupName.split('post_Acfcontent_sections_Content_')[1],\n        text: element?.text,\n        images: [ \n          {\n            image: element?.image,\n            hasCaption: element?.imageCaption && element?.imageCaption != 'no',\n            caption: getCaption(element?.imageCaption, element?.image?.caption),\n            altText: element?.altText\n          } \n        ], \n      }\n    }\n    \n    const getCaption = (imageCaption, defaultCaption) => {\n\n      switch (imageCaption) {\n      case 'no':\n        return ''\n        break;\n      case 'default':\n        return defaultCaption;\n        break;\n      default:\n        return imageCaption;\n        break;\n      }\n    }\n\n    if (!isFullImage) {\n      sectionContent.left = getSectionContent(content, 0);\n      if (content[1]) sectionContent.right = getSectionContent(content, 1);\n    } else {\n      sectionContent.full = getSectionContent(content, 0);\n    }\n\n    const getContent = (contentObject) => {\n      if (!contentObject) return\n      if (contentObject.contentType == 'TextLayout') {\n        return <TextBlock text={contentObject.text}/>\n      } else if (contentObject.contentType == 'ImageLayout') {\n        return <ImageBlock {...contentObject}/>\n      }\n    }\n\n\n    // const { image, imageCaption, imageLarge, text, caption } = content;\n    // const hasCaption = imageCaption != 'no';\n    // const sectionImage = getGatsbyImage(image);\n    // let sectionImageCaption;\n\n    // console.log( sectionContent.left.images[0] )\n\n    return (\n        <section className={classNames('content-section', 'fink-grid-container')}>\n            { isFullImage ?\n              <div className=\"content-section__column content-section__column-full fink-grid-item\">\n              { getContent(sectionContent.full ) }\n              </div>\n            :\n            <React.Fragment>\n              <div className=\"content-section__column content-section__column-left fink-grid-item\">\n                { getContent(sectionContent.left) }\n              </div>\n              <div className=\"content-section__column content-section__column-right fink-grid-item\">\n                { getContent(sectionContent.right) }\n              </div>\n            </React.Fragment>\n            }\n        </section>\n    )\n}\n\nexport default ContentSection;\n\nContentSection.propTypes = {\n  layout: PropTypes.oneOf(['ImageRight', 'ImageLeft', 'Full']),\n  fieldGroupName: PropTypes.string,\n  image: PropTypes.object,\n  imageCaption: PropTypes.string,\n  imageLarge: PropTypes.string,\n  text: PropTypes.string\n};\n\nContentSection.defaultProps = {\n  layout: 'ImageRight',\n  fieldGroupName: 'post_Acfproject_Content_ImageRight',\n};","// React\nimport React from 'react';\n\n// Gatsby\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\n// Styles\nimport './project-header.styles.scss'\n\n// Misc\nimport PropTypes from 'prop-types';\nimport PlaceholderImage from '../../../images/Image-Placeholder.png'\n\nconst ProjectHeader = ( {projectDetailImage, title} ) => {\n\n    // setTimeout(() => {\n    //     console.log(props)\n    // }, 400);\n\n    return (\n        <div className=\"project-header fink-grid-container\">\n            <div className=\"project-header__image\">\n                { projectDetailImage?.image ? \n                    <GatsbyImage className=\"project-header-image\" image={projectDetailImage.image} alt={projectDetailImage.altText}></GatsbyImage>\n                :\n                    <img src={PlaceholderImage} alt=\"Placeholder\" srcSet=\"\"/>\n                }\n            </div>\n            <h1 className=\"header-title\">{ title }</h1>\n        </div>\n    )\n}\n\nexport default ProjectHeader;\n\nProjectHeader.propTypes = {\n  // layout: PropTypes.oneOf(['ImageRight', 'ImageLeft', 'Full']),\n};\n\nProjectHeader.defaultProps = {\n  // layout: 'ImageRight',\n};","// React\nimport React, { useState, useReducer } from \"react\";\n\n// Gatsby\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\n// Components\nimport ContentSection from '../../components/3_elements/content-section/content-section.component';\nimport ProjectHeader from '../../components/2_molecules/project-header/project-header.component';\n\n// Styles\n\n// Misc\nimport { getGatsbyImage } from '../../utils/helpers';\nimport Layout from '../../components/1_atoms/layout/layout.component';\n\n// function reducer() {\n\n// }\n\nconst PostTemplate = ( { pageContext } ) => {\n\n    const acfProject = pageContext.acfProject;\n    const acfContent = pageContext.acfContent;\n    const { sections } = acfContent;\n    const { title } = pageContext;\n\n    const homeImageTexture = getGatsbyImage(acfProject.homeImageTexture);\n    const homeImageNoTexture = getGatsbyImage(acfProject.homeImageNoTexture) || homeImageTexture;\n    const projectDetailImage = getGatsbyImage(acfProject.projectDetailImage) || homeImageTexture;\n    const projectOverviewImage = getGatsbyImage(acfProject.projectOverviewImage) || homeImageTexture;\n\n    console.log(sections)\n\n    // const [] = useReducer( )\n    // const [ images, updateImages ] = useState{[]}\n\n\treturn (\n        <Layout>\n            <main>\n                <ProjectHeader title={title} projectDetailImage={projectDetailImage} />\n                { sections && \n                    <div className=\"content\">\n                        {sections.map((sectionItem, i) => (\n                            <ContentSection content={sectionItem.content} key={i}></ContentSection>\n                        ))}\n                    </div> \n                }           \n            </main>\n        </Layout>\n\t)\n};\nexport default PostTemplate;\n","export const getGatsbyImage = ( image ) => {\n\n    if (!image) return\n    \n    if ( image.node ) {\n        const gatsbyImage = image.node.localFile?.childImageSharp?.gatsbyImageData;\n        return {\n            image: gatsbyImage,\n            altText: image.node.altText,\n            width: gatsbyImage.width,\n            height: gatsbyImage.height\n        }\n    }\n\n    const gatsbyImage = image.localFile?.childImageSharp?.gatsbyImageData\n    return {\n        image: gatsbyImage,\n        altText: image.altText,\n        width: gatsbyImage.width,\n        height: gatsbyImage.height\n    }\n}\n\nexport const smDebugLog = ( content ) => {\n    console.log(content);\n}","export default __webpack_public_path__ + \"static/Image-Placeholder-20e0796b09919ac322391ed5ceef4abb.png\";"],"sourceRoot":""}