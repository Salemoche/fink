@mixin body-text( $level: normal, $body-text: $body-text, $device-size: false ) {
	@if type-of($body-text) != "map" {
		@error "`#{$body-text}` is not a valid value for $values. It must be a list.";
	}

	$size: map_get($body-text, $level);

	@if type-of($size) == "map" {

		@if $device-size == false {
			@each $device, $values in $size {
				@if $device != "small" {
					@include mq($from: $device) {
						font-size: map_get($values, "font-size");
						line-height: map_get($values, "line-height");
						color: map_get($values, "color");
						font-family: map_get($values, "font-family");
					}
				} @else {
					font-size: map_get($values, "font-size");
					line-height: map_get($values, "line-height");
					color: map_get($values, "color");
					font-family: map_get($values, "font-family");
				}
			}
		} @else {
			$device_values: map_get($size, $device-size);

			font-size: map_get($device_values, "font-size");
			line-height: map_get($device_values, "line-height");
			color: map_get($device_values, "color");
			font-family: map_get($device_values, "font-family");
		}
	}
}

@mixin content_width () {
	width: 100%;

	@media screen and (min-width: map_get( $sizes, "content-wide" )) {
		max-width: map_get( $sizes, "content-wide" );
	}

	@media screen and (max-width: map_get( $sizes, "content-wide" )) {
		max-width: 100%;
	}
}

@mixin responsive($property, $variable) {

	@include mq($from: xlarge) {
		#{$property}: map_get($variable, "huge");
	}

	@include mq($until: xlarge) {
		#{$property}: map_get($variable, "xlarge");
	}

	@include mq($until: large) {
		#{$property}: map_get($variable, "large");
	}

	@include mq($until: medium) {
		#{$property}: map_get($variable, "medium");
	}
	
	@include mq($until: small) {
		#{$property}: map_get($variable, "small");
	}

}

@mixin bg( $image ) {
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center;
	background-image: url('../img/#{$image}');
}

//SM-TODO: check if we can use a map here

@mixin hover( $property: 'transform', $value: 'scale(1.01)') {
	transition: $transition-long;

	&:hover {
		#{$property}: #{$value};
	}
}

@mixin sm-mask( $image ) {

    mask-image: url('../img/#{$image}');
    -webkit-mask-image: url('../img/#{$image}');
    mask-repeat: no-repeat;
    -webkit-mask-repeat: no-repeat;
    mask-position: center;
    -webkit-mask-position: center;
    mask-size: contain;
    -webkit-mask-size: contain;

	img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		object-position: cover;
	}
}

@mixin sm-after_icon( $content: "→", $offset: #{map_get( $spacing, "regular" )}, $spacing: #{map_get( $spacing, "regular" )}) {

    padding-right: calc( #{$spacing} * 2 + #{$offset} );;
    position: relative;

	&::after {
		content: "#{$content}";
		position: absolute;
		right: #{$offset};
        margin-top: 1px;
	}
}

@mixin sm-before_icon( $content: "→", $offset: #{map_get( $spacing, "regular" )}, $spacing: #{map_get( $spacing, "regular" )}) {

    padding-right: calc( #{$spacing} * 2 + #{$offset} );;
    position: relative;

	&::before {
		content: "#{$content}";
		position: absolute;
		right: #{$offset};
        margin-top: 1px;
	}
}